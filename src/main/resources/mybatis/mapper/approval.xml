<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.approval.repository.ApprovalRepository">

	<!-- 전자결재 카테고리 목록 -->
	<select id="selectApprovalCategory" resultType="approvalCategory">
		<![CDATA[
			SELECT approval_category_id as "approvalCategoryId",
					approval_name as "approvalName"
			FROM approval_category
			ORDER BY approval_category_id
		]]>
	</select>

	<!-- 전자결재 카테고리 양식 불러오기  -->
	<select id="selectApprovalForm" parameterType="int" resultType="string">
		<![CDATA[
			SELECT approval_form as "approvalForm"
			FROM approval_category
			WHERE approval_category_id = #{approvalCategoryId}
		]]>
	</select>

	<!-- 전자결재 결재선 선택 시 사원정보 -->
	<select id="selectApprovalLine" parameterType="String" resultType="approvalLine">
		<![CDATA[
			SELECT e.emp_id as "empId", 
				name as "empName",
                team_name as "teamName",
                dept_name as "deptName",
                grade_name as "gradeName"
      		FROM EMPLOYEES e, departments d, teams t, grade g
            WHERE e.dept_id=d.dept_id and e.team_id=t.team_id 
            	and g.grade_id= e.grade_id
                and e.emp_id=#{empId}
		]]>
	</select>
	
	<!-- 전자결재 작성 -->
	<insert id="insertApproval" parameterType="approval">
		INSERT INTO approval (
			approval_id, 
			title, 
			write_date, 
			content, 
			emp_id, 
			approval_category_id, 
			status, 
			temp_approval
			<if test="refEmpId != null">
				, ref_emp_id
			</if>)
		VALUES (
			seq_approval.nextval, 
			#{title}, 
			sysdate, 
			#{content}, 
			#{empId}, 
			#{approvalCategoryId}, 
			default, 
			#{tempApproval}
			<if test="refEmpId != null">
				, #{refEmpId}
			</if>)
		
		<selectKey keyColumn="approval_id" keyProperty="approvalId" resultType="int" order="AFTER">
			SELECT seq_approval.CURRVAL as "approval_id"
			FROM dual
		</selectKey>
	</insert>
	
	<!-- 전자결재 수정 -->
	<update id="updateApproval" parameterType="approval">
		UPDATE approval SET
			title = #{title}, 
			write_date = sysdate, 
			content = #{content}, 
			approval_category_id = #{approvalCategoryId}, 
			status = default, 
			temp_approval = #{tempApproval},
			ref_emp_id = #{refEmpId, jdbcType=VARCHAR}
		WHERE emp_id = #{empId}
			AND approval_id = #{approvalId}
	</update>
	
	<!-- 전자결재 파일 -->
	<insert id="insertApprovalFile" parameterType="approvalFile">
		<![CDATA[
			INSERT INTO approval_file (approval_file_id, approval_id, approval_file_name, approval_file_size, approval_file_content_type, approval_file_data)
			VALUES (seq_approval.nextval, #{approvalId}, #{approvalFileName}, #{approvalFileSize}, #{approvalFileContentType}, #{approvalFileData})
		]]>
	</insert>
	
	<!-- 전자결재 작성 결재선 저장 -->
	<insert id="insertApprovalLine" parameterType="approvalLine">
		<selectKey keyProperty="approvalId" resultType="int" order="BEFORE">
			<if test="approvalId != 0">
				SELECT approval_id FROM approval WHERE approval_id = #{approvalId}
			</if>
			<if test="approvalId == 0">
				SELECT seq_approval.CURRVAL FROM dual
			</if>
		</selectKey>
		INSERT INTO approval_line (approval_line_id, approval_id, emp_id, seq)
		VALUES (seq_approval_line.nextval, #{approvalId}, #{empId}, #{seq})
	</insert>
	
	<!-- 전자결재선 삭제 -->
	<delete id="deleteApprovalLine" parameterType="int">
		DELETE FROM approval_line WHERE approval_id = #{approvalId}
	</delete>
	
	<!-- 내 문서함 상태별 갯수 -->
	<select id="selectApprovalCount" parameterType="map" resultType="int">
		SELECT count(*)
		FROM approval
		WHERE temp_approval='n' and emp_id = #{empId}
			<if test="!status.equals('')">
				AND status = #{status}
			</if>
			<if test="approvalCategoryId != 0">
				AND approval_category_id = #{approvalCategoryId}
			</if>
	</select>
	
	<!-- 내 문서함 목록 -->
	<select id="selectApprovalList" parameterType="map" resultType="approval">
		SELECT approval_id as "approvalId", 
				title as "title",
				a.emp_id as "empId",
				name as "empName",
				dept_name as "deptName",
				write_date as "writeDate", 
				a.approval_category_id as "approvalCategoryId", 
                approval_name as "categoryName",
				status, 
				temp_approval as "tempApproval"
		FROM approval a, employees e, approval_category c, departments d
		WHERE a.emp_id=e.emp_id and e.dept_id = d.dept_id
			and a.approval_category_id=c.approval_category_id
			and temp_approval='n' 
			and a.emp_id = #{empId} 
			<if test="!status.equals('')">
				AND status = #{status}
			</if>
			<if test="approvalCategoryId != 0">
				AND a.approval_category_id = #{approvalCategoryId}
			</if>
		ORDER BY write_date desc
        OFFSET #{pager.startRowNo}-1 ROWS
        FETCH FIRST 10 ROWS ONLY
	</select>
	
	<!-- 결재문서함 상태별 갯수 -->
	<select id="selectConfirmCount" parameterType="map" resultType="int">
		SELECT count(*)
		FROM approval a, approval_line l
		WHERE a.approval_id = l.approval_id
		    and temp_approval='n' and l.emp_id = #{empId}
		    <if test="!status.equals('')">
				AND status = #{status}
			</if>
			<if test="approvalCategoryId != 0">
				AND approval_category_id = #{approvalCategoryId}
			</if>
	</select>
	
	<!-- 결재문서함 목록 -->
	<select id="selectConfirmList" parameterType="map" resultType="approval">
		SELECT l.approval_id as "approvalId", 
				title as "title",
				a.emp_id as "empId",
				name as "empName",
				dept_name as "deptName",
				write_date as "writeDate", 
				a.approval_category_id as "approvalCategoryId", 
                approval_name as "categoryName",
				status, 
				temp_approval as "tempApproval"
		FROM approval a, approval_line l, employees e, approval_category c, departments d
		WHERE a.emp_id=e.emp_id  and e.dept_id = d.dept_id
            and a.approval_id = l.approval_id
			and a.approval_category_id=c.approval_category_id
			and temp_approval='n' 
			and l.emp_id = #{empId} 
			<if test="!status.equals('')">
				AND status = #{status}
			</if>
			<if test="approvalCategoryId != 0">
				AND a.approval_category_id = #{approvalCategoryId}
			</if>
		ORDER BY write_date desc
        OFFSET #{pager.startRowNo}-1 ROWS
        FETCH FIRST 10 ROWS ONLY
	</select>
	
	<!-- 전자결재 임시저장 갯수 -->
	<select id="selectTempApprovalCount" parameterType="string" resultType="int">
		SELECT count(*)
		FROM approval
		WHERE temp_approval='y' and emp_id = #{empId}
	</select>
	
	<!-- 전자결재 임시저장 목록 -->
	<select id="selectApprovalTempList" parameterType="map" resultType="approval">
		SELECT approval_id as "approvalId", 
				title as "title",
				a.emp_id as "empId",
				name as "empName",
				dept_name as "deptName",
				write_date as "writeDate", 
				a.approval_category_id as "approvalCategoryId", 
                approval_name as "categoryName",
				status, 
				temp_approval as "tempApproval"
		FROM approval a, employees e, approval_category c, departments d
		WHERE a.emp_id=e.emp_id and e.dept_id = d.dept_id
			and a.approval_category_id=c.approval_category_id
			and temp_approval='y' 
			and a.emp_id = #{empId}
		ORDER BY write_date desc
        OFFSET #{pager.startRowNo}-1 ROWS
        FETCH FIRST 10 ROWS ONLY
	</select>
	
	<!-- 참조함 갯수 -->
	<select id="selectRefApprovalCount" parameterType="string" resultType="int">
		SELECT count(*)
		FROM approval
		WHERE temp_approval='n' and ref_emp_id = #{empId}
	</select>
	
	<!-- 참조함 목록 -->
	<select id="selectRefApprovalList" parameterType="map" resultType="approval">
		SELECT approval_id as "approvalId", 
				title as "title",
				a.emp_id as "empId",
				name as "empName",
				dept_name as "deptName",
				write_date as "writeDate", 
				a.approval_category_id as "approvalCategoryId", 
                approval_name as "categoryName",
				status, 
				temp_approval as "tempApproval"
		FROM approval a, employees e, approval_category c, departments d
		WHERE a.emp_id=e.emp_id and e.dept_id = d.dept_id
			and a.approval_category_id=c.approval_category_id
			and temp_approval='n' 
			and a.ref_emp_id = #{empId} 
		ORDER BY write_date desc
        OFFSET #{pager.startRowNo}-1 ROWS
        FETCH FIRST 10 ROWS ONLY
	</select>
	
	<!-- 전자결재 상세보기 참조자 정보 -->
	<select id="selectRefEmployeeByApprovalId" parameterType="int" resultType="refEmployee">
		SELECT ref_emp_id as "refEmpId",
		    	name as "refEmpName",
		    	grade_name as "refGrade"
		FROM approval a, employees e, grade g
		WHERE a.ref_emp_id = e.emp_id and g.grade_id = e.grade_id
		    and approval_id = #{approvalId}
	</select>
	
	<!-- 전자결재 상세보기 -->
	<select id="selectApprovalDetail" parameterType="int" resultType="approval">
		SELECT approval_id as "approvalId", 
		        title as "title",
		        content as "content",
		        a.emp_id as "empId",
		        e.name as "empName",
		        a.ref_emp_id as "refEmpId",
		        g.grade_name as "gradeName",
		        team_name as "teamName",
		        dept_name as "deptName",
		        write_date as "writeDate", 
		        a.approval_category_id as "approvalCategoryId", 
		        approval_name as "categoryName",
		        status
		    FROM approval a, employees e, approval_category c, grade g, teams t, departments d
		    WHERE a.emp_id = e.emp_id 
		        and a.approval_category_id = c.approval_category_id 
		        and e.grade_id = g.grade_id and e.dept_id = d.dept_id
		        and e.team_id = t.team_id
		        and a.approval_id = #{approvalId}
	</select>
	
	<!-- 전자결재 결재선 목록 -->
	<select id="selectApprovalLineList" parameterType="int" resultType="approvalLine">
		<![CDATA[
			SELECT l.approval_id as "approvalId", 
			    approval_line_id as "approvalLineId", 
			    l.emp_id as "empId", 
			    seq, 
			    is_approved as "isApproved", 
			    approval_date as "approvalDate", 
			    name as "empName",
			    approval_comment as "approvalComment",
			    grade_name as "gradeName",
			    dept_name as "deptName",
			    team_name as "teamName"
			FROM approval_line l, approval a, employees e, grade g, departments d, teams t
			WHERE l.approval_id = a.approval_id and l.emp_id = e.emp_id 
			    and e.grade_id = g.grade_id and e.dept_id = d.dept_id
			    and e.team_id = t.team_id
			    and a.approval_id = #{approvalId}
			ORDER BY seq
		]]>
	</select>
	
	<!-- 해당 문서에 대한 첨부파일 목록 -->
	<select id="selectApprovalFileList" parameterType="int" resultType="approvalFile">
		<![CDATA[
			SELECT approval_file_id as "approvalFileId",
			        approval_id as "approvalId",
			        approval_file_name as "approvalFileName",
			        approval_file_size as "approvalFileSize",
			        approval_file_data as "approvalFileData",
			        approval_file_content_type as "approvalFileContentType",
			        approval_file_data as "approvalFileData"
			FROM approval_file
			WHERE approval_id = #{approvalId}
		]]>
	</select>
	
	<!-- 전자결재 파일 정보 -->
	<select id ="selectApprovalFile" parameterType="int" resultType="approvalFile">
		<![CDATA[
			SELECT approval_file_id as "approvalFileId",
			        approval_id as "approvalId",
			        approval_file_name as "approvalFileName",
			        approval_file_size as "approvalFileSize",
			        approval_file_data as "approvalFileData",
			        approval_file_content_type as "approvalFileContentType"
			FROM approval_file
			WHERE approval_file_id = #{approvalFileId}
		]]>
	</select>
	
	<!-- 해당 문서에 대한 내 결재 순서 -->
	<select id="selectMySeq" parameterType="map" resultType="int">
		<![CDATA[
			SELECT NVL(seq, 0) as "seq"
			FROM(SELECT seq
			    FROM approval a, approval_line l
			    WHERE a.approval_id = l.approval_id
			        and a.approval_id = #{approvalId}
			        and l.emp_id = #{empId}
			    UNION ALL
			    SELECT NULL as "seq"
			    FROM DUAL)
			WHERE seq IS NOT NULL OR rownum = 1
		]]>
	</select>
	
	<!-- 결재선 승인, 반려 update -->
	<update id="updateisApproved" parameterType="approvalLine">
		<![CDATA[
			UPDATE approval_line
			SET is_approved = #{isApproved},
				approval_date = sysdate
			WHERE approval_line_id = #{approvalLineId}
		]]>
	</update>
	
	<!-- 전자결재 문서 상태 update -->
	<update id="updateApprovalStatus" parameterType="map">
		<![CDATA[
			UPDATE approval
			SET status = #{status}
			WHERE approval_id = #{approvalLine.approvalId}
		]]>
	</update>
	
	<!-- 전자결재 문서 삭제 -->
	<delete id="deleteApproval" parameterType="int">
		<![CDATA[
			DELETE FROM approval WHERE approval_id = #{approvalId}
		]]>
	</delete>
	
	<!-- 사직서 승인 처리 시 사원의 퇴사날짜 수정 -->
	<update id="updateEmployeeResignDate" parameterType="string">
		<![CDATA[
			UPDATE employees
			SET resign_date = sysdate
			WHERE emp_id = #{empId}
		]]>
	</update>
	
	<!-- 경조 휴가 신청서 승인 처리 시 사원의 대체 연휴 갯수 수정 -->
	<update id="updateEmployeeAddDayoffRemain" parameterType="map">
		<selectKey keyProperty="eventCount" resultType="int" order="BEFORE">
			SELECT event_count FROM family_event WHERE event_name = #{eventName}
		</selectKey>
		<![CDATA[
			UPDATE employees
			SET add_dayoff_remain = #{eventCount}
			WHERE emp_id = #{empId}
		]]>
	</update>
	
</mapper>